Import-Module ActiveDirectory

Import-Module ActiveDirectory

# Load groups from CSV
$groupCsvPath = "C:\Users\Administrator\Downloads\AD Build\ImportGroups.csv"
$groups = Import-Csv -Path $groupCsvPath

foreach ($group in $groups) {
    $groupName = $group.GroupName
    $groupPath = $group.Path

    if (-not (Get-ADGroup -Filter { Name -eq $groupName })) {
        try {
            New-ADGroup -Name $groupName -GroupScope Global -GroupCategory Security -Path $groupPath
            Write-Host "Created group: $groupName in $groupPath" -ForegroundColor Green
        } catch {
            Write-Host "Failed to create group $groupName: $($_.Exception.Message)" -ForegroundColor Red
        }
    } else {
        Write-Host "Group already exists: $groupName" -ForegroundColor Yellow
    }
}


# Path to the CSV
$csvPath = "C:\Users\Administrator\Downloads\AD Build\ImportUsers.csv"
$users = Import-Csv -Path $csvPath

# Step 1: Create all needed groups if they donâ€™t exist
$departments = $users | Select-Object -ExpandProperty department -Unique
foreach ($dept in $departments) {
    $groupName = "${dept}_Group"
    if (-not (Get-ADGroup -Filter { Name -eq $groupName })) {
        try {
            New-ADGroup -Name $groupName -GroupScope Global -GroupCategory Security -Path "OU=Groups,DC=kfausch,DC=local"
            Write-Host "Created group: $groupName" -ForegroundColor Green
        } catch {
            Write-Host "Failed to create group $groupName: $($_.Exception.Message)" -ForegroundColor Red
        }
    } else {
        Write-Host "Group already exists: $groupName" -ForegroundColor Yellow
    }
}

# Step 2: Create users and assign them to the right group
foreach ($line in $users) {
    if (-not $line.Given -or -not $line.Surname -or -not $line.Path -or -not $line.department) {
        Write-Host "Skipping invalid row (missing required fields): $($line | Out-String)" -ForegroundColor Yellow
        continue
    }

    $FullName = "$($line.Given) $($line.Surname)"
    $SamAccountName = "$($line.Given).$($line.Surname)"
    $UPN = "$($line.Given).$($line.Surname)@kfausch.local"
    $GroupName = "$($line.department)_Group"

    Write-Host "Creating user: $FullName, Sam: $SamAccountName, UPN: $UPN, Path: $($line.Path), Group: $GroupName" -ForegroundColor Cyan

    # Skip if user already exists
    if (Get-ADUser -Filter { SamAccountName -eq $SamAccountName }) {
        Write-Host "User $SamAccountName already exists. Skipping..." -ForegroundColor Yellow
        continue
    }

    try {
        New-ADUser `
            -Name $FullName `
            -GivenName $line.Given `
            -Surname $line.Surname `
            -SamAccountName $SamAccountName `
            -UserPrincipalName $UPN `
            -DisplayName $FullName `
            -EmailAddress $line.Email `
            -Department $line.department `
            -Path $line.Path `
            -OfficePhone $line.OfficePhone `
            -Company $line.Company `
            -Enabled $true `
            -AccountPassword (ConvertTo-SecureString "P@ssword" -AsPlainText -Force)

        Write-Host "User $FullName created successfully." -ForegroundColor Green
    } catch {
        Write-Host "Failed to create user $FullName: $($_.Exception.Message)" -ForegroundColor Red
        continue
    }

    try {
        Add-ADGroupMember -Identity $GroupName -Members $SamAccountName
        Write-Host "Added $SamAccountName to $GroupName" -ForegroundColor Green
    } catch {
        Write-Host "Failed to add $SamAccountName to group $GroupName: $($_.Exception.Message)" -ForegroundColor Red
    }
}

